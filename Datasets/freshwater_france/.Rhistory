setwd("D:/Git/NEOF_R_community_analysis/Datasets/freshwater_france")
#read in data
file_input <- read.csv("biosample_result.txt")
View(file_input)
#read in data
file_input <- read.csv("biosample_result.txt", header = FALSE)
#Seems each sample has 15 rows
#Therefore want to go from long to wide
#First need to make a new column which goes from A to O
#I can use this to then go from long to wide
#Actually will use column names I want instead of A to O
col_names <- c("info", "Identifiers", "Organism", "Atrributes",
"Collection date", "depth",
"broad-scale environmental context",
"local-scale envrionmental context",
"environmental medium","geographic location",
"latitude and longitude", "Description_text",
"Descriptions", "Keywords", "Accession")
#Replicate 15 times and add as new column
file_input$long <- rep(col_names, 15)
#Replicate 36 (n samples) times and add as new column
file_input$long <- rep(col_names, 36)
library("tidyverse")
#Convert from long to wide
wide_df_tmp <- spread(file_input, long, V1)
#Convert from long to wide
wide_df_tmp <- spread(file_input, long)
View(file_input)
#Remove some info from fiels
file_input <- gsub(pattern = " */", replacement = "",
file_input)
#Remove some info from fiels
file_input <- gsub(pattern = "^  /", replacement = "",
file_input)
#read in data
file_input <- read.csv("biosample_result.txt", header = FALSE)
#Remove some info from fiels
file_input <- gsub(pattern = "^  /", replacement = "",
file_input)
#read in data
file_input <- read.csv("biosample_result.txt", header = FALSE)
#Remove some info from fiels
file_input <- gsub(pattern = "^  \/", replacement = "",
#read in data
file_input <- read.csv("biosample_result.txt", header = FALSE)
#Remove some info from fiels
file_input <- gsub(pattern = "^  ", replacement = "",
file_input)
#read in data
file_input <- read.csv("biosample_result.txt", header = FALSE)
#read in data
file_input <- read.csv("biosample_result.txt", header = FALSE)
#Remove some info from fiels
file_input$V1  <- gsub(pattern = "^  /", replacement = "",
file_input$V1)
#read in data
file_input <- read.csv("biosample_result.txt", header = FALSE)
#Remove some info from fiels
file_input$V1  <- gsub(pattern = "^    /", replacement = "",
file_input$V1)
#Seems each sample has 15 rows
#Therefore want to go from long to wide
#First need to make a new column which goes from A to O
#I can use this to then go from long to wide
#Actually will use column names I want instead of A to O
col_names <- c("info", "Identifiers", "Organism", "Atrributes",
"Collection date", "depth",
"broad-scale environmental context",
"local-scale envrionmental context",
"environmental medium","geographic location",
"latitude and longitude", "Description_text",
"Descriptions", "Keywords", "Accession")
#Replicate 36 (n samples) times and add as new column
file_input$long <- rep(col_names, 36)
#Convert from long to wide
wide_df_tmp <- spread(file_input, long)
#Convert from long to wide
wide_df_tmp <- spread(file_input, long, V1)
rlang::last_error()
#Create empty df
df <- as.data.frame(matrix(data = NA, nrow=num_rows,
ncol=num_cols))
#Tried to do with long to wide but it complaied a lot
#Therefore will make my own loops to do so
num_rows <- 36
num_cols <- 15
#Create empty df
df <- as.data.frame(matrix(data = NA, nrow=num_rows,
ncol=num_cols))
View(df)
colnames(df) <- col_names
#Fill in values
for (c in 1:num_cols) {
col_info <- file_input[
seq(from = c, to =  num_rows * num_cols,  by = num_cols, ),
"V1"]
df[,i] <- col_info
}
#Fill in values
for (c in 1:num_cols) {
col_info <- file_input[
seq(from = c, to =  num_rows * num_cols,  by = num_cols, ),
"V1"]
df[,c] <- col_info
}
View(file_input)
#read in data
file_input <- read.csv("biosample_result.txt", header = FALSE)
#Remove some info from fields
file_input$V1  <- gsub(pattern = "^    /", replacement = "",
file_input$V1)
file_input$V1  <- gsub(pattern = ".*=", replacement = "",
file_input$V1)
View(file_input)
file_input$V1  <- gsub(pattern = " [ENV.*", replacement = "",
file_input$V1)
file_input$V1  <- gsub(pattern = " \[ENV.*", replacement = "",
file_input$V1  <- gsub(pattern = " .ENV.*", replacement = "",
file_input$V1)
library("tidyverse")
setwd("D:/Git/NEOF_R_community_analysis/Datasets/freshwater_france")
#read in data
file_input <- read.csv("biosample_result.txt", header = FALSE)
#Remove some info from fields
file_input$V1  <- gsub(pattern = "^    /", replacement = "",
file_input$V1)
file_input$V1  <- gsub(pattern = ".*=", replacement = "",
file_input$V1)
file_input$V1  <- gsub(pattern = " .ENV.*", replacement = "",
file_input$V1)
#Tried to do with long to wide but it complaied a lot
#Therefore will make my own loops to do so
num_rows <- 36
num_cols <- 15
#Create empty df
df <- as.data.frame(matrix(data = NA, nrow=num_rows,
ncol=num_cols))
#Make column names
col_names <- c("info", "Identifiers", "Organism", "Atrributes",
"Collection date", "depth",
"broad-scale environmental context",
"local-scale envrionmental context",
"environmental medium","geographic location",
"latitude and longitude", "Description_text",
"Descriptions", "Keywords", "Accession")
colnames(df) <- col_names
#Fill in values
for (c in 1:num_cols) {
col_info <- file_input[
seq(from = c, to =  num_rows * num_cols,  by = num_cols, ),
"V1"]
df[,c] <- col_info
}
View(df)
#Remove unwanted columns
retain_col_names <- c("info", "Identifiers", "Organism",
"Collection date", "depth",
"broad-scale environmental context",
"local-scale envrionmental context",
"environmental medium","geographic location",
"latitude and longitude",
"Descriptions", "Keywords", "Accession")
df <- df[,retain_col_names]
View(df)
#Now need to process some colmns
df$info  <- gsub(pattern = ".*: ", replacement = "",
file_input$V1)
#Now need to process some colmns
df$info  <- gsub(pattern = ".*: ", replacement = "",
df$info)
#identifiers
df$Identifiers  <- gsub(pattern = "Identifiers: ", replacement = "",
df$Identifiers)
strsplit(df$Identifiers, split = "; ")
strsplit(df$Identifiers, split = "; ")[1]
strsplit(df$Identifiers, split = "; ")[[]][1]
library("stringr")
str_split_fixed(df$Identifiers, "; ", 3)
df$BioSample <- gsub("BioSample: ", "",
)
df$BioSample <- gsub(pattern = "BioSample: ", replacement = "",
str_split_fixed(df$Identifiers, "; ", 3)[1])
library("tidyverse")
library("stringr")
setwd("D:/Git/NEOF_R_community_analysis/Datasets/freshwater_france")
#read in data
file_input <- read.csv("biosample_result.txt", header = FALSE)
#Remove some info from fields
file_input$V1  <- gsub(pattern = "^    /", replacement = "",
file_input$V1)
file_input$V1  <- gsub(pattern = ".*=", replacement = "",
file_input$V1)
file_input$V1  <- gsub(pattern = " .ENV.*", replacement = "",
file_input$V1)
#Tried to do with long to wide but it complaied a lot
#Therefore will make my own loops to do so
num_rows <- 36
num_cols <- 15
#Create empty df
df <- as.data.frame(matrix(data = NA, nrow=num_rows,
ncol=num_cols))
#Make column names
col_names <- c("info", "Identifiers", "Organism", "Atrributes",
"Collection_date", "depth",
"broad-scale_environmental_context",
"local-scale_envrionmental_context",
"environmental_medium","geographic_location",
"latitude_and_longitude", "Description_text",
"Descriptions", "Keywords", "Accession")
colnames(df) <- col_names
#Fill in values
for (c in 1:num_cols) {
col_info <- file_input[
seq(from = c, to =  num_rows * num_cols,  by = num_cols, ),
"V1"]
df[,c] <- col_info
}
#Remove unwanted columns
retain_col_names <- c("info", "Identifiers", "Organism",
"Collection_date", "depth",
"broad-scale_environmental_context",
"local-scale_envrionmental_context",
"environmental_ medium","geographic_location",
"latitude_and_longitude",
"Descriptions", "Keywords", "Accession")
df <- df[,retain_col_names]
library("tidyverse")
library("stringr")
setwd("D:/Git/NEOF_R_community_analysis/Datasets/freshwater_france")
#read in data
file_input <- read.csv("biosample_result.txt", header = FALSE)
#Remove some info from fields
file_input$V1  <- gsub(pattern = "^    /", replacement = "",
file_input$V1)
file_input$V1  <- gsub(pattern = ".*=", replacement = "",
file_input$V1)
file_input$V1  <- gsub(pattern = " .ENV.*", replacement = "",
file_input$V1)
#Tried to do with long to wide but it complaied a lot
#Therefore will make my own loops to do so
num_rows <- 36
num_cols <- 15
#Create empty df
df <- as.data.frame(matrix(data = NA, nrow=num_rows,
ncol=num_cols))
#Make column names
col_names <- c("info", "Identifiers", "Organism", "Atrributes",
"Collection_date", "depth",
"broad-scale_environmental_context",
"local-scale_environmental_context",
"environmental_medium","geographic_location",
"latitude_and_longitude", "Description_text",
"Descriptions", "Keywords", "Accession")
colnames(df) <- col_names
#Fill in values
for (c in 1:num_cols) {
col_info <- file_input[
seq(from = c, to =  num_rows * num_cols,  by = num_cols, ),
"V1"]
df[,c] <- col_info
}
#Remove unwanted columns
retain_col_names <- c("info", "Identifiers", "Organism",
"Collection_date", "depth",
"broad-scale_environmental_context",
"local-scale_environmental_context",
"environmental_ medium","geographic_location",
"latitude_and_longitude",
"Descriptions", "Keywords", "Accession")
df <- df[,retain_col_names]
#Remove unwanted columns
retain_col_names <- c("info", "Identifiers", "Organism",
"Collection_date", "depth",
"broad-scale_environmental_context",
"local-scale_environmental_context",
"environmental_medium","geographic_location",
"latitude_and_longitude",
"Descriptions", "Keywords", "Accession")
df <- df[,retain_col_names]
#info
df$info  <- gsub(pattern = ".*: ", replacement = "",
df$info)
#identifiers
df$Identifiers  <- gsub(pattern = "Identifiers: ", replacement = "",
df$Identifiers)
df$BioSample <- gsub(pattern = "BioSample: ", replacement = "",
str_split_fixed(df$Identifiers, "; ", 3)[1])
df$`Sample_name` <- gsub(pattern = "BioSample: ", replacement = "",
str_split_fixed(df$Identifiers, "; ", 3)[1])
df$BioSample <- gsub(pattern = "BioSample: ", replacement = "",
str_split_fixed(df$Identifiers, "; ", 3)[1])
df$BioSample <- gsub(pattern = "BioSample: ", replacement = "",
str_split_fixed(df$Identifiers, "; ", 3)[1])
df$BioSample <- gsub(pattern = "BioSample: ", replacement = "",
str_split_fixed(df$Identifiers, "; ", 3)[1])
df$Sample_name <- gsub(pattern = "Sample name: ", replacement = "",
str_split_fixed(df$Identifiers, "; ", 3)[2])
df$SRA <- gsub(pattern = "SRA: ", replacement = "",
str_split_fixed(df$Identifiers, "; ", 3)[3])
str_split_fixed(df$Identifiers, "; ", 3)[2]
str_split_fixed(df$Identifiers, "; ", 3)
df$BioSample <- gsub(pattern = "BioSample: ", replacement = "",
str_split_fixed(df$Identifiers, "; ", 3)[,1])
df$Sample_name <- gsub(pattern = "Sample name: ", replacement = "",
str_split_fixed(df$Identifiers, "; ", 3)[,2])
df$SRA <- gsub(pattern = "SRA: ", replacement = "",
str_split_fixed(df$Identifiers, "; ", 3)[,3])
