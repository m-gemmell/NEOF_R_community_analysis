[["01-R_community_main_workflow.html", "R community analysis Chapter 1 Introduction 1.1 Dataset &amp; goal", " R community analysis Matthew Gemmell 2022-12-21 Chapter 1 Introduction 1.1 Dataset &amp; goal This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. "],["02-R_packages.html", "Chapter 2 R Packages 2.1 R packages/libraries 2.2 The grammar of graphics 2.3 phyloseq", " Chapter 2 R Packages During this workshop we will use various R packages with their own intricacies. Before going into analysis we'll introduce you to some of these important concepts. 2.1 R packages/libraries R packages/libraries contain additional functions, data and code for analysing, manipulating and plotting different types of data. Many common packages will be installed as default when you install R. Other more specialised packages, such as the ggplot2 package, must be installed by the user. Packages found on The Comprehensive R Archive Network (CRAN) which is Râ€™s central software repository can be installed easily using the following command. install.packages(&quot;package_name&quot;) Every time you reload R you will need to load the packages you need if they are not one of the ones installed by default. To do this type: library(&quot;package_name&quot;) I generally have a list of library() functions at the top of my R scripts (.R files) for all the packages I use in the script. Throughout this course you will get a lot of practice installing and loading various packages. R package or R Library? R packages are a collection of R functions, data, and compiled code. You can install these into a directory on your computer. An R library is a directory containing a R package. Because of this, the terms R package and R library may be used synonymously. We will use the term package in this workshop. As we will be using a lot of packages we shall use a double colons to specify which package each function belongs to, unless the function is from base R. For example if we use the function summarize_phyloseq() from the package microbiome we would type the function like below: Note: Do not run the below command. microbiome::summarize_phyloseq() This convention has 2 benefits: We can easily tell which R package each function comes from. This is useful for your future coding where you may copy some, but not all, commands from one script to another. You will therefore know which packages you will need to load. If you need some more documentation about a function you will know what package to look up. Writing your methods will be a lot easier. Different packages may have functions with the same name. Specifying the package will ensure you are using the correct function. 2.2 The grammar of graphics During this course we will be using the grammar of graphics coding approach. This approach is implemented by the R package ggplot2 to create visualisations such as bar charts, box plots, ordination plots etc. In turn ggplot2 is used by a host of other packages, some of which we will be using. Although ggplot2 is R code its structure is very different and it takes effort to learn. Thankfully, ggplot2 is very powerful and flexible, and it produces very professional and clean plots. We will use the iris dataset (inbuilt into R) to show an example of ggplot2 code and its visualisation output is: Note: If you would like to see the contents of the iris dataset you can run the command View(iris) in your R instance. #Load library library(ggplot2) #Create new ggplot2 object using iris dataset ggplot2::ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width, colour=Species)) + #Make the object a scatter plot ggplot2::geom_point() + ggplot2::ggtitle(&quot;Iris Sepal length vs width&quot;) + #Set x and y axis label names ggplot2::labs(x = &quot;Sepal length&quot;, y = &quot;Sepal width&quot;) We will not learn ggplot2 specifically during this course. However, the structure of creating an object will be used. In the above case the initial object was built with ggplot. Subsequently additions and edits were carried out with + and various other functions. An important concept of the grammar of graphics is aesthetics. Aesthetics are the parts of a graphic/plot. In the above command we set the aesthetics with the function aes() within the ggplot() function. The X aesthetic (i.e. what values are assigned to the x axis) was set as the Sepal length values from the column Sepal.Length of the dataframe iris. In turn the Y axis values are set to the Sepal width and the colouring of the points are set to the Species. That was a quick introduction to the grammar of graphics. We will be using this to create visualisations with a phyloseq object using various R packages specifically designed for community abundance data within phyloseq objects. For more resources on ggplot2 please see the appendix of this book. 2.3 phyloseq In this book we will be working with phyloseq objects to preprocess our dataset, create visualisations, and carry out statistical analyses. This is a very popular object type for community abundance datasets as it contains the abundance table, metadata, and taxonomy table in one object, optionally containing the phylogenetic tree and reference sequences if wanted/required. "],["03-Preprocess_data.html", "Chapter 3 Preprocess", " Chapter 3 Preprocess "],["04-Taxonomy.html", "Chapter 4 Taxonomy", " Chapter 4 Taxonomy "],["05-Alpha.html", "Chapter 5 Alpha", " Chapter 5 Alpha "],["06-Beta.html", "Chapter 6 Beta", " Chapter 6 Beta "],["07-Differential_abundance_analysis.html", "Chapter 7 Differential abundance analysis", " Chapter 7 Differential abundance analysis "],["08-Appendix.html", "A ggplot2", " A ggplot2 Below are some useful resource if you would like to learn ggplot2. The R Graphics Cookbook is a good place to start. It contains a section called Understanding ggplot2 in its appendix which is useful for learning some key terminologies and concepts. ggplot2 requires its input to be in long format. You will therefore need to know how to convert your wide data to long data. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
