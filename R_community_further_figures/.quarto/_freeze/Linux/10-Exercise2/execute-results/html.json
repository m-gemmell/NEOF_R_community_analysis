{
  "hash": "2986258f712350cf92dd3194f0a6f728",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exercise 2\"\nengine: knitr\neditor: \n  markdown: \n    wrap: sentence\n---\n\n\n\n\n<center>\n![](figures/exercise_2.png){style=\"width:150px\"}\n</center>\n\nThe directory __\"~/Linux/6_final_exercise/\"__ has all the files you need. Below is a set of tasks and questions that will require all the skills you have gained from this practical.\n\n1. See what files are in the directory.  \n2. Rename the file \"3-P£_CACTTCGA_L001_R1_001.fastq\" as \"3-P3_CACTTCGA_L001_R1_001.fastq\".  \n3. Make a backup of the files in a directory called __backup__.  \n4. How many reads are in the samples?  \n5. Remove the fastq files with no data.\n6. Update the backup files with the previous change.  \n7. Check if the 1st read names match in the paired files.  \n8. Check if the last read names match in the paired files.  \n9. In file __\"1-P1_ATGCCTGG_L001_R1_001.fastq\"__ look for sequence headers with the term ‘psychrobacter'.  \n10. In the sample __1-P1__ remove any fastq entries where the term ‘psychrobacter’ appears in the fastq header. Do this for the R1 and R2 files.  \n11. Print to screen the fastq header, sequence and quality data for the 25th sequence in sample __2-P2__ for both the R1 and R2 file. Do this with one command for R1 and a separate command for R2.\n\n## Answers\n\nClick on the below expandable boxes to view my solutions for the exercise.\nThese are not the definitive solution but only examples of solutions. If your method works and you understand why then you have done it correctly.\n\n<div class='webex-solution'><button>Directory setup</button>\n\nEnsure you are in the correct directory before carrying out the below commands\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ncd ~/Linux/6_final_exercise\n```\n:::\n\n\n\n\n</div>\n\n\n\n<div class='webex-solution'><button>Answer 1</button>\n\nSee what files are in the directory\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nls\n```\n:::\n\n\n\n\n</div>\n\n\n\n<div class='webex-solution'><button>Answer 2</button>\n\n2.  Rename the file 3-P£\\_CACTTCGA_L001_R1_001.fastq to 3-P3_CACTTCGA_L001_R1_001.fastq\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nmv 3-P£_CACTTCGA_L001_R1_001.fastq \\\n3-P3_CACTTCGA_L001_R1_001.fastq\n```\n:::\n\n\n\n\n</div>\n\n\n\n<div class='webex-solution'><button>Answer 3</button>\n\nMake a backup of the files in a directory called backup\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nmkdir backup\ncp 1-P1_ATGCCTGG_L001_R1_001.fastq backup/\ncp 1-P1_ATGCCTGG_L001_R2_001.fastq backup/\ncp 2-P2_AAGGACAC_L001_R1_001.fastq backup/\ncp 2-P2_AAGGACAC_L001_R2_001.fastq backup/\ncp 3-P3_CACTTCGA_L001_R1_001.fastq backup/\ncp 3-P3_CACTTCGA_L001_R2_001.fastq backup/\ncp 4-E1_ATTGGCTC_L001_R1_001.fastq backup/\ncp 4-E1_ATTGGCTC_L001_R2_001.fastq backup/\ncp metadata.txt backup/\n```\n:::\n\n\n\n\nThis can be done a lot quicker with the use of wildcard characters (Covered in Advanced Linux section)\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nmkdir backup\ncp *fastq backup\ncp *txt backup\n```\n:::\n\n\n\n\n</div>\n\n\n\n<div class='webex-solution'><button>Answer 4</button>\n\nHow many reads are in the samples? The below command will give the number of lines in the files, this number can then be divided by 4 (mentally or using a calculator). These values will be the same for the R2 files as they are for the matching R1 file.\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nwc -l 1-P1_ATGCCTGG_L001_R1_001.fastq \\\n2-P2_AAGGACAC_L001_R1_001.fastq \\\n3-P3_CACTTCGA_L001_R1_001.fastq\n```\n:::\n\n\n\n\nAn advanced method using regular expressions, wildcard characters and grep\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ngrep -c \"^@[0-9]*_\" *R1*.fastq\n```\n:::\n\n\n\n\n</div>\n\n\n\n<div class='webex-solution'><button>Answer 5</button>\n\nRemove the fastq files with no data Check which files have no data\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nwc \\\n1-P1_ATGCCTGG_L001_R1_001.fastq 1-P1_ATGCCTGG_L001_R2_001.fastq \\\n2-P2_AAGGACAC_L001_R1_001.fastq 2-P2_AAGGACAC_L001_R2_001.fastq \\\n3-P3_CACTTCGA_L001_R1_001.fastq 3-P3_CACTTCGA_L001_R2_001.fastq \\\n4-E1_ATTGGCTC_L001_R1_001.fastq 4-E1_ATTGGCTC_L001_R2_001.fastq \n```\n:::\n\n\n\n\nRemove empty files\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nrm \\\n4-E1_ATTGGCTC_L001_R1_001.fastq 4-E1_ATTGGCTC_L001_R2_001.fastq\n```\n:::\n\n\n\n\n</div>\n\n\n\n<div class='webex-solution'><button>Answer 6</button>\n\nUpdate the backup files with the previous change\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nrm backup/4-E1_ATTGGCTC_L001_R1_001.fastq \\\nbackup/4-E1_ATTGGCTC_L001_R2_001.fastq \n```\n:::\n\n\n\n\n</div>\n\n\n\n<div class='webex-solution'><button>Answer 7</button>\n\nCheck if the 1st read names match in the paired files\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nhead -n 1 \\\n1-P1_ATGCCTGG_L001_R1_001.fastq 1-P1_ATGCCTGG_L001_R2_001.fastq \\\n2-P2_AAGGACAC_L001_R1_001.fastq 2-P2_AAGGACAC_L001_R2_001.fastq \\\n3-P3_CACTTCGA_L001_R1_001.fastq 3-P3_CACTTCGA_L001_R2_001.fastq \n```\n:::\n\n\n\n\n</div>\n\n\n\n<div class='webex-solution'><button>Answer 8</button>\n\nCheck if the last read names match in the paired files\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ntail -n 4 \\\n1-P1_ATGCCTGG_L001_R1_001.fastq 1-P1_ATGCCTGG_L001_R2_001.fastq \\\n2-P2_AAGGACAC_L001_R1_001.fastq 2-P2_AAGGACAC_L001_R2_001.fastq \\\n3-P3_CACTTCGA_L001_R1_001.fastq 3-P3_CACTTCGA_L001_R2_001.fastq \n```\n:::\n\n\n\n\n</div>\n\n\n\n<div class='webex-solution'><button>Answer 9</button>\n\nIn file 1-P1_ATGCCTGG_L001_R1_001.fastq look for sequence headers with the term 'psychrobacter'\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ngrep “psychrobacter” 1-P1_ATGCCTGG_L001_R1_001.fastq\n```\n:::\n\n\n\n\n</div>\n\n\n\n<div class='webex-solution'><button>Answer 10</button>\n\nIn the sample 1-P1 remove any fastq entries where the term 'psychrobacter' appears in the fastq header. Do this for the R1 and R2 file.\n    -   Using **nano** use \"Ctrl+W\" to search for psychrobacter. Then use \"Ctrl+K\" to cut the lines followed by \"Ctrl+W\" and \"Ctrl+X\" to save and exit.\n    -   Using **vim** with \"/\" to search for psychrobacter, \"dd\" to delete lines and \":wq\" to save the file and exit it.\n11. Print to screen the fastq header, sequence and quality data for the 25th sequence in sample 2-P2 for both the R1 and R2 file. Do this with one command. \\@24_ecoli is grepped as the first sequence is \\@0_ecoli\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ngrep -A 3 \"@24_ecoli\" 2-P2_AAGGACAC_L001_R1_001.fastq\ngrep -A 3 \"@24_ecoli\" 2-P2_AAGGACAC_L001_R2_001.fastq\n```\n:::\n\n\n\n\n</div>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}